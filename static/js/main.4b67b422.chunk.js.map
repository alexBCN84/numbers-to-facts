{"version":3,"sources":["helpers/index.js","api/index.js","components/randomYear.js","components/randomTrivia.js","components/randomDate.js","components/randomMath.js","components/integerYear.js","components/integerTrivia.js","components/integerDate.js","components/integerMath.js","App.js","serviceWorker.js","index.js"],"names":["currentDate","Date","day","getDate","month","getMonth","endpointRoot","handleResponse","res","a","error","json","Object","assign","status","text","checkInput","ok","Promise","reject","response","result","fetch","console","log","integer","getIntegerDate","RandomYear","useState","randomYear","setRandomYear","className","onClick","getRandomYear","then","data","RandomTrivia","randomTrivia","setRandomTrivia","getRandomTrivia","RandomDate","randomDate","setRandomDate","getRandomDate","RandomMath","randomMath","setRandomMath","getRandomMath","IntegerYear","integerYear","setIntegerYear","input","setInput","submit","e","key","type","getIntegerYear","value","onChange","target","placeholder","onKeyPress","alt","src","width","IntegerTrivia","integerTrivia","setIntegerTrivia","getIntegerTrivia","IntegerDate","integerDate","setIntegerDate","monthInput","setMonthInput","dayInput","setDayInput","daysArray","Array","i","length","name","map","IntegerMath","integerMath","setIntegerMath","getIntegerMath","App","todayRandomFact","setTodayRandomFact","num","toString","slice","toMonthLetters","formatDate","useEffect","getTodayRandomFact","gutters","maxWidth","mobile","tablet","desktop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4b67b422.chunk.js","sourcesContent":["export function currentDate() {\n    const currentDate = new Date();\n    const day = currentDate.getDate()\n    const month = currentDate.getMonth() + 1;\n    return {day, month};\n}\n\nfunction toOrdinal(num) {\n    num = num.toString();\n    if (num === '11' || num === '12' || num === '13') {\n        return num + 'th';\n    }\n    if (num.slice(-1) === '1') {\n        return num + 'st';\n    }\n    if (num.slice(-1) === '2') {\n        return num + 'nd';\n    }\n    if (num.slice(-1) === '3') {\n        return num + 'rd';\n    }\n    return num + 'th';\n}\n\nfunction toMonthLetters(month) {\n    switch(month) {\n        case 1:\n            return 'January';\n        case 2: \n            return 'February';\n        case 3:\n            return 'March';\n        case 4:\n            return 'April';\n        case 5: \n            return 'May';\n        case 6:\n            return 'June';\n        case 7:\n            return 'July';\n        case 8:\n            return 'August';\n        case 9:\n            return 'September';\n        case 10:\n            return 'October';\n        case 11:\n            return 'November';\n        default:\n            return 'December';\n    }\n}\n\nexport function formatDate() {\n    let {day, month} = currentDate();\n    day = toOrdinal(day);\n    month = toMonthLetters(month);\n    return {day, month};  \n}\n\n","import { currentDate } from '../helpers';\n\nconst endpointRoot = 'http://numbersapi.com/';\nconst randomYear = 'random/year';\nconst randomDate = 'random/date';\nconst randomMath = 'random/math';\nconst randomTrivia = 'random/trivia';\n\n// function handleResponse(res){\n//   return res.json()\n//     .then(json => {\n//       if(res.ok) return json\n//       let error = Object.assign({}, json, {status: res.status, text: res.text})\n//       return Promise.reject(error)\n//     })\n// }\n\n// export function getRandomYear() {\n//   fetch(`${endpointRoot}${randomYear}?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(JSON.stringify({'getRandomYear': data}, null, 4)))\n//     .catch(error => console.log(error))\n// }\n\n// export function getRandomTrivia() {\n//   fetch(`${endpointRoot}${randomTrivia}?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(JSON.stringify({'getRandomTrivia': data}, null, 4)))\n//     .catch(error => console.log(error))\n// }\n\n// export function getRandomDate() {\n//   fetch(`${endpointRoot}${randomDate}?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(JSON.stringify({'getRandomDate': data}, null, 4)))\n//     .catch(error => console.log(error))\n// }\n\n// export function getRandomMath() {\n//   fetch(`${endpointRoot}${randomMath}?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(JSON.stringify({'getRandomMath': data}, null, 4)))\n//     .catch(error => console.log(error))\n// }\n\n// export function getIntegerYear(integer) {\n//   fetch(`${endpointRoot}${integer}/year?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(JSON.stringify({'getIntegerYear': data}, null, 4)))\n//     .catch(error => console.log(error))\n// }\n\n// export function getIntegerTrivia(integer) {\n//   fetch(`${endpointRoot}${integer}/trivia?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(JSON.stringify({'getIntegerTrivia': data}, null, 4)))\n//     .catch(error => console.log(error))\n// }\n\n// export function getIntegerDate(integer) {\n//   fetch(`${endpointRoot}${integer}/date?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(JSON.stringify({'getIntegerDate': data}, null, 4)))\n//     .catch(error => console.log(error))\n// }\n\n// export function getIntegerMath(integer) {\n//   fetch(`${endpointRoot}${integer}/math?json`)\n//     .then(handleResponse)\n//     .then(data => console.log(data))\n//     .catch(error => console.log(error))\n// }\n\nasync function handleResponse(res) {\n  const error = json => Object.assign({}, json, {status: res.status, text: res.text})\n  const checkInput = json => res.ok ? json :  Promise.reject(error(json))\n  const response = await res.json()\n  const result = await checkInput(response)\n  return result;\n}\n\nexport async function getRandomYear() {\n  try { \n    const response = await fetch(`${endpointRoot}${randomYear}?json`)\n    return await handleResponse(response);\n  } catch(error){\n    console.log(error)\n  }\n}\n\nexport async function getRandomTrivia() {\n  try {\n    const response = await fetch(`${endpointRoot}${randomTrivia}?json`)\n    return await handleResponse(response)\n  } catch(error){\n    console.log(error)\n  }\n}\n\nexport async function getRandomDate() {\n  try {\n    const response = await fetch(`${endpointRoot}${randomDate}?json`)\n    return  await handleResponse(response)\n  } catch(error){\n    console.log(error)\n  }\n}\n\nexport async function getRandomMath() {\n  try {\n    const response = await fetch(`${endpointRoot}${randomMath}?json`)\n    return await handleResponse(response)\n  } catch(error) {\n    console.log(error)\n  }\n}\n\nexport async function getIntegerYear(integer) {\n  try {\n    const response = await fetch(`${endpointRoot}${integer}/year?json`)\n    return await handleResponse(response)\n  } catch(error) {\n    console.log(error)\n  }\n}\n\nexport async function getIntegerTrivia(integer) {\n  try {\n    const response = await fetch(`${endpointRoot}${integer}/trivia?json`)\n    return await handleResponse(response)\n  } catch(error) {\n    console.log(error)\n  }\n}\n\nexport async function getIntegerDate(integer) {\n  try {\n    const response = await fetch(`${endpointRoot}${integer}/date?json`)\n    return await handleResponse(response)\n  } catch(error) {\n    console.log(error)\n  }\n}\n\nexport async function getIntegerMath(integer) {\n  try {\n    const response = await fetch(`${endpointRoot}${integer}/math?json`)\n    return await handleResponse(response)\n  } catch(error) {\n    console.log(error)\n  }\n}\n\nexport function getTodayRandomFact() {\n  const {day, month} = currentDate() \n  return getIntegerDate(`${month}/${day}`)\n}\n\n","import React, {useState} from 'react';\nimport {getRandomYear} from '../api';\n\nconst RandomYear = () => {\n    const [randomYear, setRandomYear] = useState({});\n    return (\n        <section className=\"randomNumbers\">\n        <article>\n        <p>Random History Facts by Year</p>\n          <button \n            onClick={() => {\n                setRandomYear(null);\n                getRandomYear().then(data => setRandomYear(data));\n              }\n            }\n          >\n            Get a random Year\n          </button>\n          <div>\n            {randomYear?.text}\n            {!randomYear && <div className=\"random-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default RandomYear;","import React, {useState} from 'react';\nimport {getRandomTrivia} from '../api';\n\nconst RandomTrivia = () => {\n    const [randomTrivia, setRandomTrivia] = useState({});\n    return (\n        <section className=\"randomNumbers\">\n        <article>\n          <p>Random Trivia Facts</p>\n          <button \n            onClick={() => {\n                setRandomTrivia(null);\n                getRandomTrivia().then(data => setRandomTrivia(data));\n              }\n            }\n          >\n            Get a random Trivia\n          </button>\n          <div>\n            {randomTrivia?.text}\n            {!randomTrivia && <div className=\"random-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default RandomTrivia;","import React, {useState} from 'react';\nimport {getRandomDate} from '../api';\n\nconst RandomDate = () => {\n    const [randomDate, setRandomDate] = useState({});\n    return (\n        <section className=\"randomNumbers\">\n        <article>\n        <p>Random History Facts by Date</p>\n          <button \n            onClick={() => {\n                setRandomDate(null);\n                getRandomDate().then(data => setRandomDate(data));\n              }\n            }\n          >\n            Get a random Date\n          </button>\n          <div>\n            {randomDate?.text}\n            {!randomDate && <div className=\"random-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default RandomDate;","import React, {useState} from 'react';\nimport {getRandomMath} from '../api';\n\nconst RandomMath = () => {\n    const [randomMath, setRandomMath] = useState({});\n    return (\n        <section className=\"randomNumbers\">\n        <article>\n          <p>Random Math Facts</p>\n          <button \n            onClick={() => {\n                setRandomMath(null);\n                getRandomMath().then(data => setRandomMath(data));\n              }\n            }\n          >\n            Random fact about Maths\n          </button>\n          <div>\n            {randomMath?.text}\n            {!randomMath && <div className=\"random-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default RandomMath;","import React, {useState} from 'react';\nimport {getIntegerYear} from '../api';\n\nconst IntegerYear = () => {\n    const [integerYear, setIntegerYear] = useState({});\n    const [input, setInput] = useState(\"\");\n\n    function handleOnChange(e) {\n      setInput(e.target.value)\n    }\n\n    function submit(e) {\n      if (e.key === \"Enter\" || e.type === \"click\") {\n        setIntegerYear(null);\n        getIntegerYear(input).then(data => setIntegerYear(data));\n        return;\n      }\n    }\n\n    return (\n        <section className=\"integerNumbers\">\n        <article>\n          <p>What happened in a specific year?</p>\n          <input value={input} onChange={handleOnChange} placeholder=\"enter a year\" onKeyPress={submit} />\n          <button onClick={submit}>\n            <img alt=\"find\" src=\"https://s3.eu-central-1.amazonaws.com/alexgines.com/icons/find.svg\" width=\"20\"/>\n          </button>\n          <div>\n            {integerYear?.text}\n            {!integerYear && <div className=\"integer-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default IntegerYear;","import React, {useState} from 'react';\nimport {getIntegerTrivia} from '../api';\n\nconst IntegerTrivia = () => {\n    const [integerTrivia, setIntegerTrivia] = useState({});\n    const [input, setInput] = useState(\"\");\n\n    function handleOnChange(e) {\n      setInput(e.target.value)\n    }\n\n    function submit(e) {\n      if (e.key === \"Enter\" || e.type === \"click\") {\n        setIntegerTrivia(null);\n        getIntegerTrivia(input).then(data => setIntegerTrivia(data));\n        return;\n      }\n    }\n\n    return (\n        <section className=\"integerNumbers\">\n        <article>\n        <p>Curious about a trivia fact matching a number?</p>\n          <input value={input} onChange={handleOnChange} placeholder=\"enter a trivia\" onKeyPress={submit} />\n          <button onClick={submit}>\n            <img alt=\"find\" src=\"https://s3.eu-central-1.amazonaws.com/alexgines.com/icons/find.svg\" width=\"20\"/>\n          </button>\n          <div>\n            {integerTrivia?.text}\n            {!integerTrivia && <div className=\"integer-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default IntegerTrivia;","import React, {useState} from 'react';\nimport {getIntegerDate} from '../api';\n\nconst IntegerDate = () => {\n    const [integerDate, setIntegerDate] = useState({});\n    const [monthInput, setMonthInput] = useState(\"\");\n    const [dayInput, setDayInput] = useState(\"\");\n\n    function handleMonthOnChange(e) {\n      setMonthInput(e.target.value)\n    }\n\n    function handleDayOnChange(e) {\n      setDayInput(e.target.value)\n    }\n\n    function submit(e) {\n      if (e.key === \"Enter\" || e.type === \"click\") {\n        setIntegerDate(null);\n        getIntegerDate(`${monthInput}/${dayInput}`).then(data => setIntegerDate(data));\n        return;\n      }\n    }\n\n    const daysArray = new Array(31);\n    for (let i = 0; i < daysArray.length; i++) {\n      daysArray[i] = i + 1\n    }\n\n    return (\n        <section className=\"integerNumbers\">\n        <article>\n          <p>What happened on a specific date?</p>\n          <select name=\"months\" onChange={handleMonthOnChange}>\n            <option value={1}>January</option>\n            <option value={2}>February</option>\n            <option value={3}>March</option>\n            <option value={4}>April</option>\n            <option value={5}>May</option>\n            <option value={6}>June</option>\n            <option value={7}>July</option>\n            <option value={8}>August</option>\n            <option value={9}>September</option>\n            <option value={10}>October</option>\n            <option value={11}>November</option>\n            <option value={12}>December</option>\n          </select>\n          <select name=\"days\" onChange={handleDayOnChange}>\n            { daysArray.map(day => <option key={day} value={day}>{day}</option>)}\n          </select>\n          <button onClick={submit}>\n            <img alt=\"find\" src=\"https://s3.eu-central-1.amazonaws.com/alexgines.com/icons/find.svg\" width=\"20\"/>\n          </button>\n          <div>\n            {integerDate?.text}\n            {!integerDate && <div className=\"integer-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default IntegerDate;","import React, {useState} from 'react';\nimport {getIntegerMath} from '../api';\n\nconst IntegerMath = () => {\n    const [integerMath, setIntegerMath] = useState({});\n    const [input, setInput] = useState(\"\");\n\n    function handleOnChange(e) {\n      setInput(e.target.value)\n    }\n\n    function submit(e) {\n      if (e.key === \"Enter\" || e.type === \"click\") {\n        setIntegerMath(null);\n        getIntegerMath(input).then(data => setIntegerMath(data));\n        return;\n      }\n    }\n\n    return (\n        <section className=\"integerNumbers\">\n        <article>\n          <p>How does a given number relates to Math concepts?</p>\n          <input value={input} onChange={handleOnChange} placeholder=\"enter a nunmber\" onKeyPress={submit} />\n          <button onClick={submit}>\n            <img alt=\"find\" src=\"https://s3.eu-central-1.amazonaws.com/alexgines.com/icons/find.svg\" width=\"20\"/>\n          </button>\n          <div>\n            {integerMath?.text}\n            {!integerMath && <div className=\"integer-loader\">Loading...</div>}\n            </div>\n        </article>\n      </section>\n    )\n}\n\nexport default IntegerMath;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {getTodayRandomFact} from './api';\nimport {Grid, Row, Col} from 'react-grid-lib';\n\nimport {formatDate} from './helpers';\nimport RandomYear from './components/randomYear';\nimport RandomTrivia from './components/randomTrivia';\nimport RandomDate from './components/randomDate';\nimport RandomMath from './components/randomMath';\nimport IntegerYear from './components/integerYear';\nimport IntegerTrivia from './components/integerTrivia';\nimport IntegerDate from './components/integerDate';\nimport IntegerMath from './components/integerMath';\n\nfunction App() {\n  const [todayRandomFact, setTodayRandomFact] = useState();\n\n  const {day, month} = formatDate();\n  useEffect(() => {\n    getTodayRandomFact().then(data => setTodayRandomFact(data));\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>What happened on a previous {day} of {month}?</h1>\n        <div>\n          {!todayRandomFact && <div className=\"loader\">Loading...</div>}\n          {<p>{todayRandomFact?.text}</p>}\n        </div>\n      </header>\n      <main>\n        <section className=\"random\">\n          <Grid gutters={20} maxWidth={1400}>\n            <Row>\n              <Col mobile={12} tablet={6} desktop={3}>\n                <RandomYear />\n              </Col>\n              <Col mobile={12} tablet={6} desktop={3}>\n                <RandomTrivia />\n              </Col>\n              <Col mobile={12} tablet={6} desktop={3}>\n                <RandomDate />\n              </Col>\n              <Col mobile={12} tablet={6} desktop={3}>\n                <RandomMath />\n              </Col>\n            </Row>\n          </Grid>\n        </section>\n        <section className=\"integer\">\n          <Grid gutters={20} maxWidth={1400}>\n            <Row>\n            <Col mobile={12} tablet={6} desktop={3}>\n                <IntegerYear />\n              </Col>\n              <Col mobile={12} tablet={6} desktop={3}>\n                <IntegerTrivia />\n              </Col>\n              <Col mobile={12} tablet={6} desktop={3}>\n                <IntegerDate />\n              </Col>\n              <Col mobile={12} tablet={6} desktop={3}>\n                <IntegerMath />\n              </Col>\n            </Row>\n          </Grid>\n          </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}